Carousel
##    Screen:
##        name: "screen_game"
    BoxLayout:
        pos_hint: {'x': 0, 'y': 0}
        
    BoxLayout:
        pos_hint: {'x': 0, 'y': 0}

        BoxLayout:
            #orientation: 'horizontal'
            orientation: 'vertical'
            GridLayout:
                id: testgridlayout               
                size_hint: 1, 1
                height: self.width
                #cols: 6
                cols: int (len(self.children) ** .5)
                #rows: 6
                padding: 2
                spacing: 2

##                Button:
##                    id: groessengeber
##                    text: "Produkt 1"
##                    #size_hint: testgridlayout.width/(testgridlayout.width/6), testgridlayout.height/(testgridlayout.height/6)
##                    on_press: root.testfunction()
##                Button:
##                    text: "Produkt 2"
##                    on_release: print testgridlayout.height, testgridlayout.width
##                    #size_hint: testgridlayout.width/(testgridlayout.width/6), testgridlayout.height/(testgridlayout.height/6)
##                    opacity: 0


            BoxLayout:
                canvas:
                    Color:
                        rgb: 5, 0.5, 0.5
                    Rectangle:
                        source: 'data/images/background.jpg'
                        size: self.size
                         
                        pos: self.pos

[HSeparator@Label]:
    size_hint_y: None
    height: max(dp(45), self.texture_size[1] + dp(10))
    text: ctx.text if 'text' in ctx else ''
    text_size: self.width, None
    #valign: 'middle'
    valign: 'middle'
    #halign: 'center'
    halign: 'left'

<StandardWidgets>:
    BoxLayout:
        pos_hint: {'x': 0, 'y': 0}
        canvas.before:
            Color:
                rgba: 0, 0, 0, 1
            BorderImage:
                source: '../examples/widgets/sequenced_images/data/images/button_white.png'
                pos: self.pos
                size: self.size

        BoxLayout:
            orientation: 'vertical'
            #orientation: 'horizontal'
            padding: 0
            spacing: 0

            HSeparator:
                text: 'Buttons'

            Button:
                text: 'Button ' + self.state

            Button:
                text: 'Button ' + self.state
                state: 'down'

            ToggleButton:
                text: 'Toggle ' + self.state

            HSeparator:
                text: 'Toggle buttons with group'

            ToggleButton:
                text: 'Toggle 1'
                group: 'tgroup'

            ToggleButton:
                text: 'Toggle 2'
                group: 'tgroup'

        BoxLayout:
            #pos_hint: {'x': 0.5, 'y': 0}
            orientation: 'vertical'
            padding: 0
            spacing: 0

            HSeparator:
                text: 'Sliders'

            Slider:
                value: 25
                size_hint_y: None
                height: 50

            Slider:
                value: 75
                size_hint_y: None
                height: 50
                step: 25


            BoxLayout:

                Slider:
                    orientation: 'vertical'
                    value: 25

                Slider:
                    orientation: 'vertical'
                    value: 75
                    step: 25

            HSeparator:
                text: 'Progress Bar'

            ProgressBar:
                value: (20 * root.value) % (1 + self.max)
                size_hint_y: None
                height: 50

            HSeparator:
                text: 'Switch'

            Switch:
                size_hint_y: None
                height: 50


        BoxLayout:
            orientation: 'vertical'
            padding: 10
            spacing: 10

            HSeparator:
                text: 'Text inputs'

            TextInput:
                text: 'Monoline textinput'
                size_hint_y: None
                height: sp(30)

            TextInput:
                text: 'This is a password'
                size_hint_y: None
                height: sp(30)
                password: True

            TextInput:
                text: 'Readonly textinput'
                size_hint_y: None
                height: sp(30)
                readonly: True

            TextInput:
                text: 'Multiline textinput\nSecond line'

            HSeparator:
                text: 'Checkbox'

            GridLayout:
               
                rows: 1
                
                CheckBox
                CheckBox

            GridLayout:
                cols: 3
                CheckBox:
                    group: 'group1'
                CheckBox:
                    group: 'group1'
                CheckBox:
                    group: 'group1'
                CheckBox:
                    group: 'group2'
                CheckBox:
                    group: 'group2'
                CheckBox:
                    group: 'group2'
                CheckBox:
                    group: 'group3'


[HSeparator2@Label]:
    size_hint_y: None
    height: max(dp(45), self.texture_size[1] + dp(10))
    text: ctx.text if 'text' in ctx else 'kein Text vorhanden'
    text_size: self.width, None
    #valign: 'middle'
    valign: 'middle'
    #halign: 'center'
    halign: 'left'

<ComplexWidgets>:
    BoxLayout:
        pos_hint: {'x': 0, 'y': 0}

        BoxLayout:
            orientation: 'vertical'
            #padding: 10
            #spacing: 10

            HSeparator2:
                text: 'Spinner'

            Spinner:
                text: "Hauptessen"
                values: "Hauptessen", "Snacks", "Getraenke ohne", "Getraenke mit", "Sonstiges"
                
 ####### von mir eingefuegt####    
     

            HSeparator2:
                text: 'Button mit Bild'

            Button:
                #text: 'Button ' + self.state
                background_disabled_down: 'data/logo/kivy-icon-64.png'
                #background_disabled_normal: 'data/logo/kivy-icon-64.png'
                background_down: 'data/logo/kivy-icon-64.png'
                #background_normal: 'data/logo/kivy-icon-64.png'

            HSeparator2:
                text: 'normaler Button'
                        
            Button:
                text: 'Button'

 

[Button1@Button]:
    
    text: ctx.text if 'text' in ctx else ''
    text_size: self.width, None

<ImageButton@Button>:
    source: None
    Image:
        source: root.source
        pos: root.pos
        size: root.size

<GridWidget>:
    BoxLayout:
        pos_hint: {'x': 0, 'y': 0}

        BoxLayout:
            
            
            
            #orientation: 'horizontal'
            orientation: 'vertical'
            GridLayout:
                
                id: testgridlayout2               
                size_hint: 1, 1
                height: self.width
                #cols: 6
                cols: int (len(self.children) ** .5)
                #rows: 6
                padding: 2
                spacing: 2

                Button:
                    id: groessengeber
                    text: "Produkt 1"
                    #size_hint: testgridlayout2.width/(testgridlayout.width/6), testgridlayout.height/(testgridlayout.height/6)
                    on_press: root.testfunction()
                Button:
                    text: "Produkt 2"
                    on_release: print testgridlayout2.height, testgridlayout2.width
                    #size_hint: testgridlayout.width/(testgridlayout.width/6), testgridlayout.height/(testgridlayout.height/6)
                    opacity: 0.5

            BoxLayout:
                canvas:
                    #Clear
                    Color:
                        rgb: 5, 0.5, 0.5
                    Rectangle:
                        source: 'data/images/background.jpg'
                        size: self.size
                         
                        pos: self.pos

                





            

            

